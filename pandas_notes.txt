import pandas as pd

df = pd.read_csv('cancer_data.csv')
df.head()

# this returns a tuple of the dimensions of the dataframe
df.shape

# this returns the datatypes of the columns
df.dtypes

# although the datatype for diagnosis appears to be object, further
# investigation shows it's a string
type(df['diagnosis'][0])

# this displays a concise summary of the dataframe,
# including the number of non-null values in each column
df.info()

# this returns the number of unique values in each column
df.nunique()

# this returns useful descriptive statistics for each column of data
df.describe()

df.head(2)
df.tail(3)

# View the index number and label for each column
for i, v in enumerate(df.columns):
    print(i, v)

# select all the columns from 'id' to the last mean column
df_means = df.loc[:,'id':'fractal_dimension_mean']
df_means.head()

# repeat the step above using index numbers
df_means = df.iloc[:,:11]
df_means.head()

df_means.to_csv('cancer_data_means.csv', index=False)


df["weight"].mean()

# 75th percentile of hours-per-week
df["hours-per-week"].quantile(.75)


import numpy as np

se_cols = np.r_[0:2, 12:22]
#print(se_cols)
df_se = df.iloc[:,se_cols]
df_se.head()

*** CLEANING ***

# fill in missing data w/ mean of column
mean = df["duration"].mean()
df["duration"].fillna(mean, inplace=True)

# find duplicates
df.duplicated()
# count them
sum(df.duplicated())

# removing duplicates (entire row is duplicated)
df.drop_duplicates(inplace=True)


# convert str to datetime
df["ts"] = pd.to_datetime(df["ts"])


# remove "_mean" from column names
new_labels = []
for col in df.columns:
    if '_mean' in col:
        new_labels.append(col[:-5])  # exclude last 6 characters
    else:
        new_labels.append(col)

# assign new labels to columns in dataframe
df.columns = new_labels

*** PLOTTING ***

import pandas as pd
% matplotlib inline

df = pd.read_csv('census.csv')
df.info()

# show array and various hists
df.hist()

# resize and hide array
df.hist(figsize=(8,8));

# show particular hist
df['age'].hist();
df['age'].plot(kind='hist');

# get counts of unique values
df['education'].value_counts()

# plot it to bar chart
df['education'].value_counts().plot(kind='bar');

# plot it to pie chart
df['workclass'].value_counts().plot(kind='pie', figsize=(8,8));

df = pd.read_csv('cancer.csv')

# get overview of scatters
pd.plotting.scatter_matrix(df, figsize=(15,15));

# show scatter
df.plot(x='compactness', y='concavity', kind='scatter');

# show box
df['concave_points'].plot(kind='box');


*** SUMMARY STATS ***

# create new data frames using masks
df_m = df[df["diagnosis"] == "M"]
df_m.head()

# see summary stats about area feature
df_m['area'].describe()

# create 1 chart comparing 2 means
import matplotlib.pyplot as plt
% matplotlib inline

fig, ax = plt.subplots(figsize=(8, 6))
ax.hist(df_b['area'], alpha=0.5, label='benign')
ax.hist(df_m['area'], alpha=0.5, label='malignant')
ax.set_title('distributions of benign and malignant tumor areas')
ax.set_xlabel('Area')
ax.set_ylabel('Count')
ax.legend(loc='upper right')
plt.show()


*** EXAMPLES ***

# for some store sales data, show total sales from last month.
# stores are storeA -> storeE
# "week" looks like 2014-05-04

from datetime import datetime, timedelta
# total sales for the last month
max_week = max(df["week"])
#print(max_week)
d = datetime.strptime(max_week, '%Y-%m-%d')
dstart = d - timedelta(weeks=4)
start_month_of_max_week = dstart.strftime('%Y-%m-%d')
#print(start_month_of_max_week)

df_max = df[(df['week'] > start_month_of_max_week) & (df['week'] <= max_week)]
#df_max.head()

df_max_stores_summed = df_max.loc[:,'storeA':'storeE'].sum()
sum(df_max_stores_summed)

# average sales
# (is this the average of all sales per month, across stores?)
df_all_stores_summed = df.loc[:,'storeA':'storeE'].sum()
row_count = df.shape[0]
sum(df_all_stores_summed/row_count)
